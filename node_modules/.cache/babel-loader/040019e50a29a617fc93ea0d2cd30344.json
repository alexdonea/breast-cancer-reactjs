{"ast":null,"code":"import React from \"react\";\nconst e = React.createElement;\n\nclass Input extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onChange = this.onChange.bind(this);\n    this.state = {\n      value: this.props.value\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.value !== state.value) {\n      return {\n        value: props.value\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    return e(\"input\", {\n      onChange: event => this.props.updateValue(event.target.value),\n      placeholder: this.props.placeholder,\n      value: this.state.value\n    });\n  }\n\n}\n\nexport default Input;","map":{"version":3,"sources":["/Users/acd/Documents/Projects/breast-cancer-ml/src/Components/Input.js"],"names":["React","e","createElement","Input","Component","constructor","props","onChange","bind","state","value","getDerivedStateFromProps","render","event","updateValue","target","placeholder"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,CAAC,GAAGD,KAAK,CAACE,aAAhB;;AAEA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWI;AADP,KAAb;AAGD;;AAGD,SAAOC,wBAAP,CAAgCL,KAAhC,EAAuCG,KAAvC,EAA8C;AAC5C,QAAIH,KAAK,CAACI,KAAN,KAAgBD,KAAK,CAACC,KAA1B,EAAiC;AAC/B,aAAO;AACLA,QAAAA,KAAK,EAAEJ,KAAK,CAACI;AADR,OAAP;AAGD;;AACD,WAAO,IAAP;AACD;;AAIDE,EAAAA,MAAM,GAAG;AACP,WAAOX,CAAC,CAAC,OAAD,EAAU;AAChBM,MAAAA,QAAQ,EAAEM,KAAK,IAAI,KAAKP,KAAL,CAAWQ,WAAX,CAAuBD,KAAK,CAACE,MAAN,CAAaL,KAApC,CADH;AAEhBM,MAAAA,WAAW,EAAE,KAAKV,KAAL,CAAWU,WAFR;AAGhBN,MAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC;AAHF,KAAV,CAAR;AAKD;;AA3BiC;;AA6BpC,eAAeP,KAAf","sourcesContent":["import React from \"react\";\n\nconst e = React.createElement;\n\nclass Input extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onChange = this.onChange.bind(this);\n    this.state = {\n      value: this.props.value\n    };\n  }\n\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.value !== state.value) {\n      return {\n        value: props.value\n      };\n    }\n    return null;\n  }\n\n\n\n  render() {\n    return e(\"input\", {\n      onChange: event => this.props.updateValue(event.target.value),\n      placeholder: this.props.placeholder,\n      value: this.state.value\n    });\n  }\n}\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}