{"ast":null,"code":"import React from \"react\";\nconst e = React.createElement;\n\nclass Input extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.props.value\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.value !== state.value) {\n      return {\n        value: props.value\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    return e(\"input\", {\n      style: {\n        margin: 4.5\n      },\n      onChange: event => this.props.updateValue(event.target.value),\n      placeholder: this.props.placeholder,\n      value: this.state.value\n    });\n  }\n\n}\n\nexport default Input;","map":{"version":3,"sources":["/Users/acd/Documents/Projects/breast-cancer-ml/src/Components/Input.js"],"names":["React","e","createElement","Input","Component","constructor","props","state","value","getDerivedStateFromProps","render","style","margin","onChange","event","updateValue","target","placeholder"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,CAAC,GAAGD,KAAK,CAACE,aAAhB;;AAEA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE;AADP,KAAb;AAGD;;AAGD,SAAOC,wBAAP,CAAgCH,KAAhC,EAAuCC,KAAvC,EAA8C;AAC5C,QAAID,KAAK,CAACE,KAAN,KAAgBD,KAAK,CAACC,KAA1B,EAAiC;AAC/B,aAAO;AACLA,QAAAA,KAAK,EAAEF,KAAK,CAACE;AADR,OAAP;AAGD;;AACD,WAAO,IAAP;AACD;;AAIDE,EAAAA,MAAM,GAAG;AACP,WAAOT,CAAC,CAAC,OAAD,EAAU;AAChBU,MAAAA,KAAK,EAAC;AAACC,QAAAA,MAAM,EAAC;AAAR,OADU;AAEhBC,MAAAA,QAAQ,EAAEC,KAAK,IAAI,KAAKR,KAAL,CAAWS,WAAX,CAAuBD,KAAK,CAACE,MAAN,CAAaR,KAApC,CAFH;AAGhBS,MAAAA,WAAW,EAAE,KAAKX,KAAL,CAAWW,WAHR;AAIhBT,MAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC;AAJF,KAAV,CAAR;AAMD;;AA3BiC;;AA6BpC,eAAeL,KAAf","sourcesContent":["import React from \"react\";\n\nconst e = React.createElement;\n\nclass Input extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.props.value\n    };\n  }\n\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.value !== state.value) {\n      return {\n        value: props.value\n      };\n    }\n    return null;\n  }\n\n\n\n  render() {\n    return e(\"input\", {\n      style:{margin:4.5},\n      onChange: event => this.props.updateValue(event.target.value),\n      placeholder: this.props.placeholder,\n      value: this.state.value\n    });\n  }\n}\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}