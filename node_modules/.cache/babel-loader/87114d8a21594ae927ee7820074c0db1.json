{"ast":null,"code":"var _jsxFileName = \"/Users/acd/Documents/Projects/breast-cancer-ml/src/App.js\";\nimport React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Console from \"./Components/Console\";\nimport Button from \"./Components/Button\";\nimport RadioButton from \"./Components/RadioButton\";\nimport Input from './Components/Input';\nconst e = React.createElement;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.clearConsole = this.clearConsole.bind(this);\n    this.addConsoleValue = this.addConsoleValue.bind(this);\n    this.trainingModeAction = this.trainingModeAction.bind(this);\n    this.state = {\n      console: [\"Nothing on console...\"],\n      epochs: 10,\n      iterations: 300,\n      mode: \"default\",\n      trainedModel: []\n    };\n  }\n\n  componentDidMount() {}\n\n  clearConsole() {\n    this.setState({\n      console: []\n    });\n  }\n\n  train() {\n    const date = new Date();\n    this.setState({\n      console: [...this.state.console, \"[\" + date.toLocaleTimeString() + \"]:Training...\"]\n    });\n  }\n\n  trainingModeAction(mode) {\n    this.setState({\n      mode: mode\n    });\n  }\n\n  addConsoleValue() {\n    const date = new Date();\n    this.setState({\n      console: [...this.state.console, \"[\" + date.toLocaleTimeString() + \"]:Training...\"]\n    });\n  }\n\n  renderMode(mode) {\n    switch (mode) {\n      default:\n        return e(\"div\", {}, React.createElement(Button, {\n          label: \"Train\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }), e('p', null, 'Predict trained dataset using default test dataset'), React.createElement(Button, {\n          label: \"Predict\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }));\n\n      case \"custom\":\n        return e('p', {}, 'custom goest here...');\n    }\n  }\n\n  render() {\n    return e(\"div\", {\n      className: \"container\"\n    }, e(\"div\", {\n      className: \"row\"\n    }, e(\"div\", {\n      className: \"col-md-6\"\n    }, e(\"p\", null, \"Console\"), React.createElement(Console, {\n      console: this.state.console,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"Add\",\n      onClick: this.addConsoleValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(Button, {\n      label: \"Clear\",\n      onClick: this.clearConsole,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), e(\"div\", {\n      className: \"col-md-6\"\n    }, e(\"p\", {}, \"Train\"), e(\"p\", null, \"Default Breast Cancer Dataset\"), e(\"div\", {\n      className: \"row\"\n    }, e('div', {\n      className: 'col-md-12'\n    }, e('div', {\n      className: 'col-md-6'\n    }, React.createElement(Input, {\n      placeholder: \"Enter here number of epochs\",\n      value: this.state.epochs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), e('div', {\n      className: 'col-md-6'\n    }, React.createElement(Input, {\n      placeholder: \"Enter here number of iterations\",\n      value: this.state.iterations,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }))), e(\"div\", {\n      className: \"col-md-6\"\n    }, React.createElement(RadioButton, {\n      label: \"Default dataset train\",\n      value: \"default\",\n      onModeSelection: this.trainingModeAction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })), e(\"div\", {\n      className: \"col-md-6\"\n    }, React.createElement(RadioButton, {\n      label: \"Custom dataset train\",\n      value: \"custom\",\n      onModeSelection: this.trainingModeAction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }))), this.renderMode(this.state.mode))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/acd/Documents/Projects/breast-cancer-ml/src/App.js"],"names":["React","Console","Button","RadioButton","Input","e","createElement","App","Component","constructor","props","clearConsole","bind","addConsoleValue","trainingModeAction","state","console","epochs","iterations","mode","trainedModel","componentDidMount","setState","train","date","Date","toLocaleTimeString","renderMode","render","className"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sCAAP;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,MAAMC,CAAC,GAAGL,KAAK,CAACM,aAAhB;;AACA,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBD,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKE,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBF,IAAxB,CAA6B,IAA7B,CAA1B;AAEA,SAAKG,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,CAAC,uBAAD,CADE;AAEXC,MAAAA,MAAM,EAAE,EAFG;AAGXC,MAAAA,UAAU,EAAC,GAHA;AAIXC,MAAAA,IAAI,EAAE,SAJK;AAKXC,MAAAA,YAAY,EAAE;AALH,KAAb;AAOD;;AAEDC,EAAAA,iBAAiB,GAAG,CAAE;;AAEtBV,EAAAA,YAAY,GAAG;AACb,SAAKW,QAAL,CAAc;AACZN,MAAAA,OAAO,EAAE;AADG,KAAd;AAGD;;AAEDO,EAAAA,KAAK,GAAE;AACL,UAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,SAAKH,QAAL,CAAc;AACZN,MAAAA,OAAO,EAAE,CACP,GAAG,KAAKD,KAAL,CAAWC,OADP,EAEP,MAAMQ,IAAI,CAACE,kBAAL,EAAN,GAAkC,eAF3B;AADG,KAAd;AAMD;;AAEDZ,EAAAA,kBAAkB,CAACK,IAAD,EAAO;AACvB,SAAKG,QAAL,CAAc;AACZH,MAAAA,IAAI,EAAEA;AADM,KAAd;AAGD;;AACDN,EAAAA,eAAe,GAAG;AAChB,UAAMW,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,SAAKH,QAAL,CAAc;AACZN,MAAAA,OAAO,EAAE,CACP,GAAG,KAAKD,KAAL,CAAWC,OADP,EAEP,MAAMQ,IAAI,CAACE,kBAAL,EAAN,GAAkC,eAF3B;AADG,KAAd;AAMD;;AAEDC,EAAAA,UAAU,CAACR,IAAD,EAAO;AACb,YAAOA,IAAP;AACE;AACI,eAAOd,CAAC,CACN,KADM,EAEN,EAFM,EAGN,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHM,EAINA,CAAC,CAAC,GAAD,EAAK,IAAL,EAAU,oDAAV,CAJK,EAKN,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALM,CAAR;;AAOJ,WAAK,QAAL;AACM,eAAOA,CAAC,CAAC,GAAD,EAAK,EAAL,EAAQ,sBAAR,CAAR;AAVR;AAeH;;AAEDuB,EAAAA,MAAM,GAAG;AACP,WAAOvB,CAAC,CACN,KADM,EAEN;AAAEwB,MAAAA,SAAS,EAAE;AAAb,KAFM,EAGNxB,CAAC,CACC,KADD,EAEC;AAAEwB,MAAAA,SAAS,EAAE;AAAb,KAFD,EAGCxB,CAAC,CACC,KADD,EAEC;AAAEwB,MAAAA,SAAS,EAAE;AAAb,KAFD,EAGCxB,CAAC,CAAC,GAAD,EAAM,IAAN,EAAY,SAAZ,CAHF,EAIC,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAE,KAAKU,KAAL,CAAWC,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJD,EAKC,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAoB,MAAA,OAAO,EAAE,KAAKH,eAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALD,EAMC,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAsB,MAAA,OAAO,EAAE,KAAKF,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAND,CAHF,EAWCN,CAAC,CACC,KADD,EAEC;AAAEwB,MAAAA,SAAS,EAAE;AAAb,KAFD,EAGCxB,CAAC,CAAC,GAAD,EAAM,EAAN,EAAU,OAAV,CAHF,EAICA,CAAC,CAAC,GAAD,EAAM,IAAN,EAAY,+BAAZ,CAJF,EAKCA,CAAC,CACC,KADD,EAEC;AAAEwB,MAAAA,SAAS,EAAE;AAAb,KAFD,EAGCxB,CAAC,CAAC,KAAD,EAAO;AAACwB,MAAAA,SAAS,EAAC;AAAX,KAAP,EACCxB,CAAC,CAAC,KAAD,EAAO;AAAEwB,MAAAA,SAAS,EAAC;AAAZ,KAAP,EACC,oBAAE,KAAF;AAAQ,MAAA,WAAW,EAAE,6BAArB;AACE,MAAA,KAAK,EAAI,KAAKd,KAAL,CAAWE,MADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADF,EAMCZ,CAAC,CAAC,KAAD,EAAO;AAAEwB,MAAAA,SAAS,EAAC;AAAZ,KAAP,EAEC,oBAAE,KAAF;AAAQ,MAAA,WAAW,EAAE,iCAArB;AACE,MAAA,KAAK,EAAI,KAAKd,KAAL,CAAWG,UADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CANF,CAHF,EAgBCb,CAAC,CACC,KADD,EAEC;AAAEwB,MAAAA,SAAS,EAAE;AAAb,KAFD,EAGC,oBAAC,WAAD;AACE,MAAA,KAAK,EAAC,uBADR;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,eAAe,EAAE,KAAKf,kBAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,CAhBF,EAyBCT,CAAC,CACC,KADD,EAEC;AAAEwB,MAAAA,SAAS,EAAE;AAAb,KAFD,EAGC,oBAAC,WAAD;AACE,MAAA,KAAK,EAAC,sBADR;AAEE,MAAA,KAAK,EAAC,QAFR;AAGE,MAAA,eAAe,EAAE,KAAKf,kBAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,CAzBF,CALF,EAwCC,KAAKa,UAAL,CAAgB,KAAKZ,KAAL,CAAWI,IAA3B,CAxCD,CAXF,CAHK,CAAR;AA0DD;;AA9H+B;;AAiIlC,eAAeZ,GAAf","sourcesContent":["import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Console from \"./Components/Console\";\nimport Button from \"./Components/Button\";\nimport RadioButton from \"./Components/RadioButton\";\nimport Input from './Components/Input';\n\nconst e = React.createElement;\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.clearConsole = this.clearConsole.bind(this);\n    this.addConsoleValue = this.addConsoleValue.bind(this);\n    this.trainingModeAction = this.trainingModeAction.bind(this);\n\n    this.state = {\n      console: [\"Nothing on console...\"],\n      epochs: 10,\n      iterations:300,\n      mode: \"default\",\n      trainedModel: []\n    };\n  }\n\n  componentDidMount() {}\n\n  clearConsole() {\n    this.setState({\n      console: []\n    });\n  }\n\n  train(){\n    const date = new Date();\n    this.setState({\n      console: [\n        ...this.state.console,\n        \"[\" + date.toLocaleTimeString() + \"]:Training...\"\n      ]\n    });\n  }\n\n  trainingModeAction(mode) {\n    this.setState({\n      mode: mode\n    });\n  }\n  addConsoleValue() {\n    const date = new Date();\n    this.setState({\n      console: [\n        ...this.state.console,\n        \"[\" + date.toLocaleTimeString() + \"]:Training...\"\n      ]\n    });\n  }\n\n  renderMode(mode) {\n      switch(mode){\n        default:\n            return e(\n              \"div\",\n              {},\n              <Button label=\"Train\" />,\n              e('p',null,'Predict trained dataset using default test dataset'),\n              <Button label=\"Predict\" />\n            );\n        case \"custom\":\n              return e('p',{},'custom goest here...');\n      }\n      \n    \n\n  }\n\n  render() {\n    return e(\n      \"div\",\n      { className: \"container\" },\n      e(\n        \"div\",\n        { className: \"row\" },\n        e(\n          \"div\",\n          { className: \"col-md-6\" },\n          e(\"p\", null, \"Console\"),\n          <Console console={this.state.console} />,\n          <Button label=\"Add\" onClick={this.addConsoleValue} />,\n          <Button label=\"Clear\" onClick={this.clearConsole} />\n        ),\n        e(\n          \"div\",\n          { className: \"col-md-6\" },\n          e(\"p\", {}, \"Train\"),\n          e(\"p\", null, \"Default Breast Cancer Dataset\"),\n          e(\n            \"div\",\n            { className: \"row\" },\n            e('div',{className:'col-md-12'},\n              e('div',{ className:'col-md-6'},\n                < Input placeholder =\"Enter here number of epochs\"\n                  value = {this.state.epochs}\n                />\n              ),\n              e('div',{ className:'col-md-6'},\n\n                < Input placeholder =\"Enter here number of iterations\"\n                  value = {this.state.iterations}\n                />\n              ),\n            ),\n            e(\n              \"div\",\n              { className: \"col-md-6\" },\n              <RadioButton\n                label=\"Default dataset train\"\n                value=\"default\"\n                onModeSelection={this.trainingModeAction}\n              />\n            ),\n            e(\n              \"div\",\n              { className: \"col-md-6\" },\n              <RadioButton\n                label=\"Custom dataset train\"\n                value=\"custom\"\n                onModeSelection={this.trainingModeAction}\n              />\n            )\n          ),\n          this.renderMode(this.state.mode)\n        )\n      )\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}