{"ast":null,"code":"import React from 'react';\nconst e = React.createElement;\nconst ref = React.createRef;\n\nclass ChartComponent extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidUpdate() {\n    this.myChart.data.labels = this.props.data.map(d => d.time);\n    this.myChart.data.datasets[0].data = this.props.data.map(d => d.value);\n    this.myChart.update();\n  }\n\n  componentDidMount() {\n    this.myChart = new Chart(this.chartRef.current, {\n      type: 'line',\n      options: {\n        scales: {\n          xAxes: [{\n            type: 'time',\n            time: {\n              unit: 'week'\n            }\n          }],\n          yAxes: [{\n            ticks: {\n              min: 0\n            }\n          }]\n        }\n      },\n      data: {\n        labels: this.props.data.map(d => d.time),\n        datasets: [{\n          label: this.props.title,\n          data: this.props.data.map(d => d.value),\n          fill: 'none',\n          backgroundColor: this.props.color,\n          pointRadius: 2,\n          borderColor: this.props.color,\n          borderWidth: 1,\n          lineTension: 0\n        }]\n      }\n    });\n  }\n\n  render() {\n    return e('canvas', {\n      ref: ref\n    });\n  }\n\n}\n\nexport default ChartComponent;","map":{"version":3,"sources":["/Users/acd/Documents/Projects/breast-cancer-ml/src/Components/ChartComponent.js"],"names":["React","e","createElement","ref","createRef","ChartComponent","Component","constructor","props","componentDidUpdate","myChart","data","labels","map","d","time","datasets","value","update","componentDidMount","Chart","chartRef","current","type","options","scales","xAxes","unit","yAxes","ticks","min","label","title","fill","backgroundColor","color","pointRadius","borderColor","borderWidth","lineTension","render"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,CAAC,GAAGD,KAAK,CAACE,aAAhB;AACA,MAAMC,GAAG,GAAGH,KAAK,CAACI,SAAlB;;AACA,MAAMC,cAAN,SAA6BL,KAAK,CAACM,SAAnC,CAA6C;AAEzCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACH;;AAEDC,EAAAA,kBAAkB,GAAG;AACjB,SAAKC,OAAL,CAAaC,IAAb,CAAkBC,MAAlB,GAA2B,KAAKJ,KAAL,CAAWG,IAAX,CAAgBE,GAAhB,CAAoBC,CAAC,IAAIA,CAAC,CAACC,IAA3B,CAA3B;AACA,SAAKL,OAAL,CAAaC,IAAb,CAAkBK,QAAlB,CAA2B,CAA3B,EAA8BL,IAA9B,GAAqC,KAAKH,KAAL,CAAWG,IAAX,CAAgBE,GAAhB,CAAoBC,CAAC,IAAIA,CAAC,CAACG,KAA3B,CAArC;AACA,SAAKP,OAAL,CAAaQ,MAAb;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKT,OAAL,GAAe,IAAIU,KAAJ,CAAU,KAAKC,QAAL,CAAcC,OAAxB,EAAiC;AAC9CC,MAAAA,IAAI,EAAE,MADwC;AAE9CC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE,CACL;AACEH,YAAAA,IAAI,EAAE,MADR;AAEER,YAAAA,IAAI,EAAE;AACJY,cAAAA,IAAI,EAAE;AADF;AAFR,WADK,CADD;AASNC,UAAAA,KAAK,EAAE,CACL;AACEC,YAAAA,KAAK,EAAE;AACLC,cAAAA,GAAG,EAAE;AADA;AADT,WADK;AATD;AADD,OAFqC;AAqB9CnB,MAAAA,IAAI,EAAE;AACJC,QAAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWG,IAAX,CAAgBE,GAAhB,CAAoBC,CAAC,IAAIA,CAAC,CAACC,IAA3B,CADJ;AAEJC,QAAAA,QAAQ,EAAE,CAAC;AACTe,UAAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWwB,KADT;AAETrB,UAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWG,IAAX,CAAgBE,GAAhB,CAAoBC,CAAC,IAAIA,CAAC,CAACG,KAA3B,CAFG;AAGTgB,UAAAA,IAAI,EAAE,MAHG;AAITC,UAAAA,eAAe,EAAE,KAAK1B,KAAL,CAAW2B,KAJnB;AAKTC,UAAAA,WAAW,EAAE,CALJ;AAMTC,UAAAA,WAAW,EAAE,KAAK7B,KAAL,CAAW2B,KANf;AAOTG,UAAAA,WAAW,EAAE,CAPJ;AAQTC,UAAAA,WAAW,EAAE;AARJ,SAAD;AAFN;AArBwC,KAAjC,CAAf;AAoCD;;AAEHC,EAAAA,MAAM,GAAE;AACJ,WAAOvC,CAAC,CAAC,QAAD,EAAU;AAACE,MAAAA,GAAG,EAACA;AAAL,KAAV,CAAR;AACH;;AApDwC;;AAuD7C,eAAeE,cAAf","sourcesContent":["import React from 'react';\n\nconst e = React.createElement;\nconst ref = React.createRef\nclass ChartComponent extends React.Component {\n\n    constructor(props){\n        super(props)\n    }\n\n    componentDidUpdate() {\n        this.myChart.data.labels = this.props.data.map(d => d.time);\n        this.myChart.data.datasets[0].data = this.props.data.map(d => d.value);\n        this.myChart.update();\n      }\n      componentDidMount() {\n        this.myChart = new Chart(this.chartRef.current, {\n          type: 'line',\n          options: {\n            scales: {\n              xAxes: [\n                {\n                  type: 'time',\n                  time: {\n                    unit: 'week'\n                  }\n                }\n              ],\n              yAxes: [\n                {\n                  ticks: {\n                    min: 0\n                  }\n                }\n              ]\n            }\n          },\n          data: {\n            labels: this.props.data.map(d => d.time),\n            datasets: [{\n              label: this.props.title,\n              data: this.props.data.map(d => d.value),\n              fill: 'none',\n              backgroundColor: this.props.color,\n              pointRadius: 2,\n              borderColor: this.props.color,\n              borderWidth: 1,\n              lineTension: 0\n            }]\n          }\n        });\n\n      }\n\n    render(){\n        return e('canvas',{ref:ref})\n    }\n}\n\nexport default ChartComponent;"]},"metadata":{},"sourceType":"module"}